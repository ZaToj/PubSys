package real;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

public class mainMenu {
    public static void show(User user) {
        // Create the frame
        JFrame frame = new JFrame("Main Menu");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(900, 600); // More reasonable default size
        frame.setLocationRelativeTo(null); // Center the window
        frame.setMinimumSize(new Dimension(600, 400)); // Set minimum size

        // Use a more sophisticated layout with panels
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Add padding
        
        // Create a title
        JLabel titleLabel = new JLabel("Welcome to the Main Menu");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24));
        titleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        
        // Button styling
        Dimension buttonSize = new Dimension(200, 40);
        Font buttonFont = new Font("Arial", Font.PLAIN, 16);

        // Create buttons with consistent styling
        JButton orderButton = createStyledButton(
            LanguageManager.getInstance().getMessages().getString("mainMenu.order"), 
            buttonSize, buttonFont);
        JButton profileButton = createStyledButton(
            LanguageManager.getInstance().getMessages().getString("mainMenu.viewProfile"), 
            buttonSize, buttonFont);
        JButton historyButton = createStyledButton(
            LanguageManager.getInstance().getMessages().getString("mainMenu.orderHistory"), 
            buttonSize, buttonFont);
        JButton bookTableButton = createStyledButton(
            LanguageManager.getInstance().getMessages().getString("mainMenu.bookTable"), 
            buttonSize, buttonFont);
        JButton adminButton = createStyledButton(
            LanguageManager.getInstance().getMessages().getString("mainMenu.admin"), 
            buttonSize, buttonFont);

        // Add components to panel
        mainPanel.add(titleLabel);
        mainPanel.add(Box.createVerticalStrut(30)); // Spacer
        mainPanel.add(orderButton);
        mainPanel.add(Box.createVerticalStrut(15));
        mainPanel.add(profileButton);
        mainPanel.add(Box.createVerticalStrut(15));
        mainPanel.add(historyButton);
        mainPanel.add(Box.createVerticalStrut(15));
        mainPanel.add(bookTableButton);
        
        if (user.isAdmin()) {
            mainPanel.add(Box.createVerticalStrut(15));
            mainPanel.add(adminButton);
        }

        // Add action listeners
        orderButton.addActionListener(e -> {
            frame.dispose();
            OrderMenu.show(user);
        });

        profileButton.addActionListener(e -> {
            frame.dispose();
            ViewProfile.show(user);
        });

        historyButton.addActionListener(e -> {
            frame.dispose();
            ViewOrderHistory.show(user);
        });

        bookTableButton.addActionListener(e -> {
            frame.dispose();
            bookTable.show(user);
        });

        adminButton.addActionListener(e -> {
            frame.dispose();
            AdminOptions.show(user);
        });

        // Add panel to frame
        frame.add(mainPanel);
        
        // Try to use the system look and feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(frame);
        } catch (Exception e) {
            e.printStackTrace();
        }

        frame.setVisible(true);
    }

    private static JButton createStyledButton(String text, Dimension size, Font font) {
        JButton button = new JButton(text);
        button.setMaximumSize(size);
        button.setAlignmentX(Component.CENTER_ALIGNMENT);
        button.setFont(font);
        button.setBackground(new Color(66, 135, 245)); // Light blue
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
        
        // Add hover effect
        button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button.setBackground(new Color(45, 115, 225)); // Darker blue
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                button.setBackground(new Color(66, 135, 245));
            }
        });
        
        return button;
    }
}